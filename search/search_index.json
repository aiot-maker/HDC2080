{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"HDC2080 We use a module manufactured by CJMCU which is designed around the Texas Instrument HDC2080 integrated circuit. Description The HDC2080 is a digital humidity and temperature sensor with very attractive features: High accuracy Low power consumption I2C interface Programmable thresholds Data Ready / Interruput pin Powering the module - 3.3V only The integrated circuit has a supply voltage range of 1.6V to 3.6V. The module doesn\u00b4t have a voltage regulator therefore it can only be powered by 3.3V from the Raspberry Pi. Pinout SDC SLA are the I2C pins GND , VCC are the powering pins ADD , this input pin allows to select an alternative I2C bus address for the module. When disconnected or connected to GND the module will appear to the bus with 0x40 address. When this pin is connected to 3.3V the I2c address will be 0x41. INT , this output pin can be used to signal measurement available in the registers or be used to signal temperature or humidity thresholds. How to get humidity and temperature values The sensor will remain in sleep mode until a measurement is triggered. There is a set of three bits in the registers that will tell the sensor to work in auto measurements mode or wait for an I2C command to trigger a single measurement. The values of the measurement are converted from analog to digital and stored in specific registers from where you can read the values. It is possible to configure the sensor to signal in the physical interrupt pin the availability of new measurements. What is the threshold features It is possible to program the sensor to trigger an interruption when the temperature or humidity reaches a value too high or too low. These maximum and minimum values (thresholds) are configurable. There are four registers that can be programmed to store them. This feature can be useful in a number of use cases but not necessarily used in others.","title":"HDC2080"},{"location":"#hdc2080","text":"We use a module manufactured by CJMCU which is designed around the Texas Instrument HDC2080 integrated circuit.","title":"HDC2080"},{"location":"#description","text":"The HDC2080 is a digital humidity and temperature sensor with very attractive features: High accuracy Low power consumption I2C interface Programmable thresholds Data Ready / Interruput pin","title":"Description"},{"location":"#powering-the-module-33v-only","text":"The integrated circuit has a supply voltage range of 1.6V to 3.6V. The module doesn\u00b4t have a voltage regulator therefore it can only be powered by 3.3V from the Raspberry Pi.","title":"Powering the module - 3.3V only"},{"location":"#pinout","text":"SDC SLA are the I2C pins GND , VCC are the powering pins ADD , this input pin allows to select an alternative I2C bus address for the module. When disconnected or connected to GND the module will appear to the bus with 0x40 address. When this pin is connected to 3.3V the I2c address will be 0x41. INT , this output pin can be used to signal measurement available in the registers or be used to signal temperature or humidity thresholds.","title":"Pinout"},{"location":"#how-to-get-humidity-and-temperature-values","text":"The sensor will remain in sleep mode until a measurement is triggered. There is a set of three bits in the registers that will tell the sensor to work in auto measurements mode or wait for an I2C command to trigger a single measurement. The values of the measurement are converted from analog to digital and stored in specific registers from where you can read the values. It is possible to configure the sensor to signal in the physical interrupt pin the availability of new measurements.","title":"How to get humidity and temperature values"},{"location":"#what-is-the-threshold-features","text":"It is possible to program the sensor to trigger an interruption when the temperature or humidity reaches a value too high or too low. These maximum and minimum values (thresholds) are configurable. There are four registers that can be programmed to store them. This feature can be useful in a number of use cases but not necessarily used in others.","title":"What is the threshold features"},{"location":"nodered/","text":"I2C-bus library The library i2c-bus available in NPM will empower us to read and write to the registers of the HDC2080. Using Node.js libraries is easier then ever. As from Node-RED 1.3 it is possible to require a Node.js library from inside a function node. All you need to do is declare the library name and the variable name in the setup tab of the function node.","title":"Node-RED"},{"location":"nodered/#i2c-bus-library","text":"The library i2c-bus available in NPM will empower us to read and write to the registers of the HDC2080. Using Node.js libraries is easier then ever. As from Node-RED 1.3 it is possible to require a Node.js library from inside a function node. All you need to do is declare the library name and the variable name in the setup tab of the function node.","title":"I2C-bus library"},{"location":"reading/","text":"Reading temperature and humidity Temperature is stores by the sensor in registers 0x00 and 0x01, being 0x00 the least siggnificant (bits 0 to 7) whereas register 0x01 holds the most significant part of the value (bits 8 to 15). As a matter of fact only 14 bits are used but this won\u00b4t change how you read the value. First read the register 0x00 and then read register 0x01. Once you get the values it is necessary to apply a formula to translate it to degrees centigrade. In JavaScript this formula can be written as: let temp = (((256 * r2) + r1) / 65536) * 165 - 40.5; where r1 is the reading of the least significant value and r2 the reading of the most significant value. It is almost the same in regards to reading humidity values but in this case you will get the values form registers 0x02 (least significant) and 0x03 (most significant). The formula to apply, according to the datasheet is: In JavaScript this formula can be written as: let hum = (((256 * r2) + r1) / 65536) * 100; where r1 is the reading of the least significant value and r2 the reading of the most significant value.","title":"Reading humidity and temperature"},{"location":"reading/#reading-temperature-and-humidity","text":"Temperature is stores by the sensor in registers 0x00 and 0x01, being 0x00 the least siggnificant (bits 0 to 7) whereas register 0x01 holds the most significant part of the value (bits 8 to 15). As a matter of fact only 14 bits are used but this won\u00b4t change how you read the value. First read the register 0x00 and then read register 0x01. Once you get the values it is necessary to apply a formula to translate it to degrees centigrade. In JavaScript this formula can be written as: let temp = (((256 * r2) + r1) / 65536) * 165 - 40.5; where r1 is the reading of the least significant value and r2 the reading of the most significant value. It is almost the same in regards to reading humidity values but in this case you will get the values form registers 0x02 (least significant) and 0x03 (most significant). The formula to apply, according to the datasheet is: In JavaScript this formula can be written as: let hum = (((256 * r2) + r1) / 65536) * 100; where r1 is the reading of the least significant value and r2 the reading of the most significant value.","title":"Reading temperature and humidity"},{"location":"registers/","text":"Register Map Programming and using the HDC2080 module require from us to understand the register map. Table from TI datasheet","title":"Registers"},{"location":"registers/#register-map","text":"Programming and using the HDC2080 module require from us to understand the register map. Table from TI datasheet","title":"Register Map"}]}